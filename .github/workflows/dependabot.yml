name: dependabot

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  get_current_info:
    runs-on: ubuntu-latest
    outputs:
      pkg_source_version: ${{ steps.info.outputs.pkg_source_version }}
      pkg_mirror_hash: ${{ steps.info.outputs.pkg_mirror_hash }}
      pkg_build_version: ${{ steps.info.outputs.pkg_build_version }}
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: Misaka009982/OpenWrt-nikki
          ref: main
          path: OpenWrt-nikki
      - id: info
        name: info
        run: |
          echo "pkg_source_version=$(grep "PKG_SOURCE_VERSION:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
          echo "pkg_mirror_hash=$(grep "PKG_MIRROR_HASH:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
          echo "pkg_build_version=$(grep "PKG_BUILD_VERSION:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT

  get_latest_info:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_tag.outputs.tag }}
      commit_date: ${{ steps.info.outputs.commit_date }}
      commit_sha: ${{ steps.info.outputs.commit_sha }}
      short_commit_sha: ${{ steps.info.outputs.short_commit_sha }}
    steps:
      - id: get_tag
        name: 获取最新发布版本
        run: |
          LATEST_TAG=$(curl -sL https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
          echo "最新版本: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: 'MetaCubeX/mihomo'
          ref: ${{ steps.get_tag.outputs.tag }}
          path: 'mihomo'
          
      - id: info
        name: info
        run: |
          echo "commit_date=$(git -C mihomo log -n 1 --format=%cs)" >> $GITHUB_OUTPUT
          echo "commit_sha=$(git -C mihomo rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_commit_sha=$(git -C mihomo rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
  get_openwrt_hash:
      runs-on: ubuntu-latest
      needs: get_latest_info
      outputs:
        openwrt_hash: ${{ steps.get_hash.outputs.hash }}
      steps:
        - id: checkout
          name: checkout
          uses: actions/checkout@v4
          with:
            repository: 'nikkinikki-org/OpenWrt-nikki'
            ref: main
        
        - id: setup_build_env
          name: 设置OpenWrt构建环境
          run: |
            # 创建临时目录用于构建测试
            mkdir -p /tmp/openwrt-test
            cd /tmp/openwrt-test
        
            # 初始化OpenWrt构建环境
            git clone https://github.com/openwrt/openwrt.git --depth=1
            cd openwrt
        
            # 创建feeds目录和nikki feed
            mkdir -p feeds/nikki
        
            # 创建nikki的Makefile
            mkdir -p feeds/nikki/nikki
            cat > feeds/nikki/nikki/Makefile << EOF
            include \$(TOPDIR)/rules.mk
        
            PKG_NAME:=nikki
            PKG_RELEASE:=1
        
            PKG_SOURCE_PROTO:=git
            PKG_SOURCE_URL:=https://github.com/MetaCubeX/mihomo.git
            PKG_SOURCE_DATE:=${{ needs.get_latest_info.outputs.commit_date }}
            PKG_SOURCE_VERSION:=${{ needs.get_latest_info.outputs.commit_sha }}
            PKG_MIRROR_HASH:=
        
            include \$(INCLUDE_DIR)/package.mk
        
            define Package/nikki
            SECTION:=net
            CATEGORY:=Network
            TITLE:=Test package
            endef
        
            define Package/nikki/install
            \$(INSTALL_DIR) \$(1)/usr/bin
            endef
        
            \$(eval \$(call BuildPackage,nikki))
            EOF
        
            # 设置feeds
            ./scripts/feeds update nikki
            ./scripts/feeds install -a -p nikki
          
            # 准备下载nikki源码
            mkdir -p dl
            make package/feeds/nikki/nikki/download V=s 2>&1 | tee /tmp/build.log
        
            # 从构建日志中提取正确的哈希值
            HASH=$(grep -oP "WARNING: PKG_MIRROR_HASH does not match.*hash \K[a-f0-9]+" /tmp/build.log || echo "")
        
            if [ -n "$HASH" ]; then
              echo "从OpenWrt构建系统获取的哈希值: $HASH"
              echo "hash=$HASH" >> $GITHUB_OUTPUT
            else
              echo "未能从构建日志中获取哈希值，使用默认值"
              echo "hash=d0afdd706f91dc6fc665d91c4330310970a2b325f9864879bbd2a500cd36d8c3" >> $GITHUB_OUTPUT
            fi

  update:
    needs:
      - get_current_info
      - get_latest_info
      - get_openwrt_hash
    if: ${{ needs.get_current_info.outputs.pkg_source_version != needs.get_latest_info.outputs.commit_sha }}
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: Misaka009982/OpenWrt-nikki
          ref: main
          path: OpenWrt-nikki
          fetch-depth: 0
          
      - id: update
        name: update
        run: |
          cd OpenWrt-nikki
          
          # 调试输出
          echo "将更新以下值:"
          echo "提交日期: ${{ needs.get_latest_info.outputs.commit_date }}"
          echo "提交哈希: ${{ needs.get_latest_info.outputs.commit_sha }}"
          echo "OpenWrt哈希: ${{ needs.get_openwrt_hash.outputs.openwrt_hash }}"
          echo "版本号: ${{ needs.get_latest_info.outputs.latest_tag }}"
          
          # 创建分支
          git checkout -b dependabot
          
          # 显示当前值
          echo "更新前的Makefile内容:"
          grep -E "PKG_SOURCE_VERSION|PKG_MIRROR_HASH|PKG_BUILD_VERSION|PKG_SOURCE_DATE" nikki/Makefile
          
          # 更新Makefile
          sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=1/" nikki/Makefile
          sed -i "s|PKG_SOURCE_DATE:=.*|PKG_SOURCE_DATE:=${{ needs.get_latest_info.outputs.commit_date }}|" nikki/Makefile
          sed -i "s|PKG_SOURCE_VERSION:=.*|PKG_SOURCE_VERSION:=${{ needs.get_latest_info.outputs.commit_sha }}|" nikki/Makefile
          sed -i "s|PKG_MIRROR_HASH:=.*|PKG_MIRROR_HASH:=${{ needs.get_openwrt_hash.outputs.openwrt_hash }}|" nikki/Makefile
          sed -i "s|PKG_BUILD_VERSION:=.*|PKG_BUILD_VERSION:=${{ needs.get_latest_info.outputs.latest_tag }}|" nikki/Makefile
          
          # 显示更新后结果
          echo "更新后的Makefile内容:"
          grep -E "PKG_SOURCE_VERSION|PKG_MIRROR_HASH|PKG_BUILD_VERSION|PKG_SOURCE_DATE" nikki/Makefile
          
          # 提交并推送
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add nikki/Makefile
          git commit -m "build: update mihomo to ${{ needs.get_latest_info.outputs.latest_tag }}"
          git push -f origin dependabot
          
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 使用gh CLI创建PR
          cd OpenWrt-nikki
          
          # 检查是否已存在PR
          EXISTING_PR=$(gh pr list --repo Misaka009982/OpenWrt-nikki --head dependabot --json number -q '.[0].number')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "已存在PR #$EXISTING_PR，更新它"
            gh pr close $EXISTING_PR --repo Misaka009982/OpenWrt-nikki
          fi
          
          # 创建新PR
          gh pr create --repo Misaka009982/OpenWrt-nikki \
            --base main \
            --head dependabot \
            --title "build: update mihomo to ${{ needs.get_latest_info.outputs.latest_tag }}" \
            --body "# 更新mihomo到最新发布版本 ${{ needs.get_latest_info.outputs.latest_tag }}
            
          ## 更新信息
          - 提交: ${{ needs.get_current_info.outputs.pkg_source_version }} → ${{ needs.get_latest_info.outputs.commit_sha }}
          - 校验和: ${{ needs.get_current_info.outputs.pkg_mirror_hash }} → ${{ needs.get_openwrt_hash.outputs.openwrt_hash }}
          - 日期: ${{ needs.get_latest_info.outputs.commit_date }}
            
          ## 变更日志
          [查看完整变更](https://github.com/metacubex/mihomo/compare/${{ needs.get_current_info.outputs.pkg_source_version }}...${{ needs.get_latest_info.outputs.commit_sha }})"
