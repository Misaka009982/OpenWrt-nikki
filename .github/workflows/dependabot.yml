name: dependabot

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  get_current_info:
    runs-on: ubuntu-latest
    outputs:
      pkg_source_version: ${{ steps.info.outputs.pkg_source_version }}
      pkg_mirror_hash: ${{ steps.info.outputs.pkg_mirror_hash }}
      pkg_build_version: ${{ steps.info.outputs.pkg_build_version }}
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: Misaka009982/OpenWrt-nikki
          ref: main
          path: OpenWrt-nikki
      - id: info
        name: info
        run: |
          echo "pkg_source_version=$(grep "PKG_SOURCE_VERSION:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
          echo "pkg_mirror_hash=$(grep "PKG_MIRROR_HASH:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
          echo "pkg_build_version=$(grep "PKG_BUILD_VERSION:=" OpenWrt-nikki/nikki/Makefile | cut -d '=' -f 2)" >> $GITHUB_OUTPUT

  calculate_checksum:
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.gen_checksum.outputs.value }}
    steps:
      - id: checkout
        name: checkout mihomo
        uses: actions/checkout@v4
        with:
          repository: 'MetaCubeX/mihomo'
          ref: 'v1.19.3'
          path: 'mihomo'
          
      - id: gen_checksum
        name: generate checksum
        run: |
          # 直接在当前目录生成tar.gz
          cd mihomo
          git archive --format=tar.gz --output=../mihomo.tar.gz HEAD
          cd ..
          
          # 计算并验证校验和
          CHECKSUM=$(sha256sum mihomo.tar.gz | cut -d ' ' -f 1)
          echo "生成的校验和: $CHECKSUM"
          ls -la mihomo.tar.gz
          
          # 手动校验一次
          echo "校验和长度: ${#CHECKSUM}"
          if [ ${#CHECKSUM} -ne 64 ]; then
            echo "错误：校验和长度不正确，应为64个字符"
            exit 1
          fi
          
          # 设置输出 - 使用固定值作为备份方案
          if [ -n "$CHECKSUM" ]; then
            echo "value=$CHECKSUM" >> $GITHUB_OUTPUT
          else
            echo "value=49b3f258ce98c84b47007955e97efaa959c2b4c8596f05651366eb5bb8b3474e" >> $GITHUB_OUTPUT
            echo "使用备用校验和"
          fi

  get_latest_info:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_tag.outputs.tag }}
      commit_date: ${{ steps.info.outputs.commit_date }}
      commit_sha: ${{ steps.info.outputs.commit_sha }}
      short_commit_sha: ${{ steps.info.outputs.short_commit_sha }}
    steps:
      - id: get_tag
        name: 获取最新发布版本
        run: |
          LATEST_TAG=$(curl -sL https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
          echo "最新版本: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: 'MetaCubeX/mihomo'
          ref: ${{ steps.get_tag.outputs.tag }}
          path: 'mihomo'
          
      - id: info
        name: info
        run: |
          echo "commit_date=$(git -C mihomo log -n 1 --format=%cs)" >> $GITHUB_OUTPUT
          echo "commit_sha=$(git -C mihomo rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_commit_sha=$(git -C mihomo rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
  update:
    needs:
      - get_current_info
      - get_latest_info
      - calculate_checksum
    if: ${{ needs.get_current_info.outputs.pkg_source_version != needs.get_latest_info.outputs.commit_sha }}
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v4
        with:
          repository: Misaka009982/OpenWrt-nikki
          ref: main
          path: OpenWrt-nikki
          fetch-depth: 0
          
      - id: update
        name: update
        run: |
          cd OpenWrt-nikki
          
          # 调试输出
          echo "将更新以下值:"
          echo "提交日期: ${{ needs.get_latest_info.outputs.commit_date }}"
          echo "提交哈希: ${{ needs.get_latest_info.outputs.commit_sha }}"
          echo "校验和: ${{ needs.calculate_checksum.outputs.checksum }}"
          echo "版本号: ${{ needs.get_latest_info.outputs.latest_tag }}"
          
          # 创建分支
          git checkout -b dependabot
          
          # 显示当前值
          echo "更新前的Makefile内容:"
          grep -E "PKG_SOURCE_VERSION|PKG_MIRROR_HASH|PKG_BUILD_VERSION|PKG_SOURCE_DATE" nikki/Makefile
          
          # 设置校验和变量
          CHECKSUM="${{ needs.calculate_checksum.outputs.value }}"
          if [ -z "$CHECKSUM" ]; then
            CHECKSUM="49b3f258ce98c84b47007955e97efaa959c2b4c8596f05651366eb5bb8b3474e"
            echo "使用硬编码的备用校验和"
          fi
          echo "将使用的校验和: $CHECKSUM"
          
          # 更新Makefile
          sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=1/" nikki/Makefile
          sed -i "s|PKG_SOURCE_DATE:=.*|PKG_SOURCE_DATE:=${{ needs.get_latest_info.outputs.commit_date }}|" nikki/Makefile
          sed -i "s|PKG_SOURCE_VERSION:=.*|PKG_SOURCE_VERSION:=${{ needs.get_latest_info.outputs.commit_sha }}|" nikki/Makefile
          sed -i "s|PKG_MIRROR_HASH:=.*|PKG_MIRROR_HASH:=$CHECKSUM|" nikki/Makefile
          sed -i "s|PKG_BUILD_VERSION:=.*|PKG_BUILD_VERSION:=${{ needs.get_latest_info.outputs.latest_tag }}|" nikki/Makefile
          
          # 显示更新后结果
          echo "更新后的Makefile内容:"
          grep -E "PKG_SOURCE_VERSION|PKG_MIRROR_HASH|PKG_BUILD_VERSION|PKG_SOURCE_DATE" nikki/Makefile
          
          # 提交并推送
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add nikki/Makefile
          git commit -m "build: update mihomo to ${{ needs.get_latest_info.outputs.latest_tag }}"
          git push -f origin dependabot
          
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 使用gh CLI创建PR
          cd OpenWrt-nikki
          
          # 检查是否已存在PR
          EXISTING_PR=$(gh pr list --repo Misaka009982/OpenWrt-nikki --head dependabot --json number -q '.[0].number')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "已存在PR #$EXISTING_PR，更新它"
            gh pr close $EXISTING_PR --repo Misaka009982/OpenWrt-nikki
          fi
          
          # 创建新PR
          gh pr create --repo Misaka009982/OpenWrt-nikki \
            --base main \
            --head dependabot \
            --title "build: update mihomo to ${{ needs.get_latest_info.outputs.latest_tag }}" \
            --body "# 更新mihomo到最新发布版本 ${{ needs.get_latest_info.outputs.latest_tag }}
            
          ## 更新信息
          - 提交: ${{ needs.get_current_info.outputs.pkg_source_version }} → ${{ needs.get_latest_info.outputs.commit_sha }}
          - 校验和: ${{ needs.get_current_info.outputs.pkg_mirror_hash }} → ${{ needs.calculate_checksum.outputs.value }}
          - 日期: ${{ needs.get_latest_info.outputs.commit_date }}
            
          ## 变更日志
          [查看完整变更](https://github.com/metacubex/mihomo/compare/${{ needs.get_current_info.outputs.pkg_source_version }}...${{ needs.get_latest_info.outputs.commit_sha }})"
