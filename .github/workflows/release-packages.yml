name: release-packages
on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  release:
    name: ${{ matrix.arch }}-${{ matrix.branch }} release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
          - mipsel_24kc
        branch:
          - openwrt-23.05
    steps:
      - name: checkout
        uses: actions/checkout@v4

      # 提取版本信息，用于生成文件名和标签
      - name: extract version info
        id: version
        run: |
          # 从Makefile中提取版本信息
          VERSION=$(grep "PKG_BUILD_VERSION:=" nikki/Makefile | cut -d'=' -f2)
          DATE=$(grep "PKG_SOURCE_DATE:=" nikki/Makefile | cut -d'=' -f2)
          # 移除引号
          VERSION=$(echo $VERSION | tr -d '"' | tr -d "'")
          DATE=$(echo $DATE | tr -d '"' | tr -d "'")
          
          echo "版本信息: VERSION=$VERSION, DATE=$DATE"
          
          # 设置输出变量
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "tag_name=Nikki-$VERSION" >> $GITHUB_OUTPUT
          echo "file_name=nikki-${DATE}~${VERSION}" >> $GITHUB_OUTPUT
          
          # 显示提取的信息
          echo "版本: $VERSION"
          echo "日期: $DATE"
          echo "标签名: Nikki-$VERSION"
          echo "文件名前缀: nikki-${DATE}~${VERSION}"

      # 确保feed结构正确
      - name: setup feed structure
        run: |
          # 显示当前目录结构
          echo "当前目录结构:"
          find . -type d | sort
          
          # 确保nikki的Makefile存在
          if [ ! -f "nikki/Makefile" ]; then
            echo "错误: nikki/Makefile文件未找到!"
            exit 1
          fi
          
          # 显示nikki的Makefile内容
          echo "nikki/Makefile内容:"
          cat nikki/Makefile
          
          # 检查files目录
          if [ ! -d "nikki/files" ]; then
            echo "警告: nikki/files目录未找到!"
            exit 1
          else
            echo "files目录内容:"
            ls -la nikki/files/
          fi

      # 预下载nikki源码
      - name: pre-download nikki source
        run: |
          # 从官方GitHub预下载nikki源码
          mkdir -p dl
          curl -L -o dl/nikki-latest.tar.gz https://github.com/MetaCubeX/mihomo/archive/refs/heads/Dev.tar.gz || echo "预下载源码失败，将由SDK自动处理"

      # 构建步骤
      - name: build packages
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}
          FEEDNAME: nikki
          PACKAGES: "nikki"
          V: 99  # 详细输出
          INDEX: 1  # 生成索引
          DL_DIR: ${{ github.workspace }}/dl
          KEY_BUILD: ${{ secrets.KEY_BUILD }}
          NO_REFRESH_CHECK: true
          IGNORE_HASH: 1
          FORCE_UNSAFE_CONFIGURE: 1

      # 检查构建结果并重命名文件
      - name: process build results
        run: |
          echo "构建结果:"
          find bin -type f -name "*.ipk" | sort
          
          # 检查是否存在ipk文件
          IPK_COUNT=$(find bin -type f -name "*.ipk" | wc -l)
          echo "找到 $IPK_COUNT 个ipk文件"
          
          if [ "$IPK_COUNT" -eq 0 ]; then
            echo "错误: 没有找到任何IPK文件!"
            exit 1
          fi
          
          # 创建输出目录
          mkdir -p output/${{ matrix.branch }}/${{ matrix.arch }}
          
          # 重命名并复制IPK文件
          for ipk in $(find bin -name "nikki_*.ipk"); do
            # 获取原始文件名
            filename=$(basename "$ipk")
            # 创建新文件名
            new_filename="${{ steps.version.outputs.file_name }}_${{ matrix.arch }}.ipk"
            echo "重命名: $filename -> $new_filename"
            # 复制并重命名
            cp "$ipk" "output/${{ matrix.branch }}/${{ matrix.arch }}/$new_filename"
          done
          
          # 检查最终文件
          echo "最终输出文件:"
          find output -type f | sort
          
          # 生成符号链接 (便于固定文件名引用)
          cd output/${{ matrix.branch }}/${{ matrix.arch }}/
          ln -sf "${{ steps.version.outputs.file_name }}_${{ matrix.arch }}.ipk" "nikki_latest_${{ matrix.arch }}.ipk"
          cd -
          
          # 显示文件大小
          ls -lh output/${{ matrix.branch }}/${{ matrix.arch }}/*.ipk

      # 发布到GitHub Releases
      - name: release
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            output/${{ matrix.branch }}/${{ matrix.arch }}/${{ steps.version.outputs.file_name }}_${{ matrix.arch }}.ipk
          name: "Nikki ${{ steps.version.outputs.version }} for ${{ matrix.arch }}"
          draft: false
          prerelease: false

      # 上传构建产物作为Artifact
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: nikki_${{ matrix.arch }}_${{ matrix.branch }}
          path: output/${{ matrix.branch }}/${{ matrix.arch }}/*.ipk
          
  # 生成feed索引
  feed:
    needs: release
    name: generate feed
    runs-on: ubuntu-latest
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: nikki_*
          path: public
          
      - name: organize feed structure
        run: |
          # 查看下载的文件
          echo "下载的构建产物:"
          find public -type f | sort
          
          # 创建feeds目录结构
          mkdir -p public/feeds/nikki
          
          # 复制IPK文件到feeds目录
          find public -name "*.ipk" -exec cp {} public/feeds/nikki/ \;
          
          # 生成包索引
          cd public/feeds/nikki/
          
          # 安装必要的工具
          sudo apt-get update
          sudo apt-get install -y dpkg-dev
          
          # 生成Packages索引
          dpkg-scanpackages . > Packages
          gzip -c Packages > Packages.gz
          
          # 查看生成的索引
          echo "生成的索引文件大小:"
          ls -lh Packages*
          
          echo "索引内容预览:"
          head -n 20 Packages

      - name: sign packages
        run: |
          if [ -n "${{ secrets.KEY_BUILD_PUB }}" ]; then
            echo "${{ secrets.KEY_BUILD_PUB }}" > public/feeds/nikki/key-build.pub
            echo "已添加密钥文件"
          else
            echo "警告: 未提供KEY_BUILD_PUB密钥"
          fi

      - name: deploy feed
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          force_orphan: true
          commit_message: "release: Nikki ${{ github.ref_name }}"
